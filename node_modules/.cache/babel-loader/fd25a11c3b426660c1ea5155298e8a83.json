{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\aditya vinayak\\\\Desktop\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\aditya vinayak\\\\Desktop\\\\my-app\\\\src\\\\containers\\\\BurgerBuilder\\\\BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalprice: 4\n    };\n\n    this.addIngredients = type => {\n      const oldcount = this.state.ingredients[type];\n      const updatedcount = oldcount + 1;\n\n      const updatedingredients = _objectSpread({}, this.state.ingredients);\n\n      updatedingredients[type] = updatedcount;\n      const priceaddition = INGREDIENT_PRICES[type];\n      const oldprice = this.state.totalprice;\n      const newprice = oldprice + priceaddition;\n      this.setState({\n        totalprice: newprice,\n        ingredients: updatedingredients\n      });\n    };\n\n    this.removeIngredients = type => {\n      const oldcount = this.state.ingredients[type];\n      const updatedcount = oldcount - 1;\n\n      const updatedingredients = _objectSpread({}, this.state.ingredients);\n\n      updatedingredients[type] = updatedcount;\n      const priceaddition = INGREDIENT_PRICES[type];\n      const oldprice = this.state.totalprice;\n      const newprice = oldprice - priceaddition;\n      this.setState({\n        totalprice: newprice,\n        ingredients: updatedingredients\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Burger, {\n      ingredients: this.state.ingredients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(BuildControls, {\n      ingredientadded: this.addIngredients,\n      ingredientremoved: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["C:\\Users\\aditya vinayak\\Desktop\\my-app\\src\\containers\\BurgerBuilder\\BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalprice","addIngredients","type","oldcount","updatedcount","updatedingredients","priceaddition","oldprice","newprice","setState","removeIngredients","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAiBC,SAAjB,QAAkC,OAAlC;AACA,OAAOC,GAAP,MAAgB,eAAhB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,aAAP,MAA0B,qDAA1B;AAEA,MAAMC,iBAAiB,GAAE;AACvBC,EAAAA,KAAK,EAAC,GADiB;AAEvBC,EAAAA,MAAM,EAAC,GAFgB;AAGvBC,EAAAA,IAAI,EAAC,GAHkB;AAIvBC,EAAAA,KAAK,EAAC;AAJiB,CAAzB;;AAQA,MAAMC,aAAN,SAA4BT,SAA5B,CAAqC;AAAA;AAAA;AAAA,SACnCU,KADmC,GAC3B;AACNC,MAAAA,WAAW,EAAG;AACZN,QAAAA,KAAK,EAAC,CADM;AAEZG,QAAAA,KAAK,EAAC,CAFM;AAGZF,QAAAA,MAAM,EAAC,CAHK;AAIZC,QAAAA,IAAI,EAAC;AAJO,OADR;AAQLK,MAAAA,UAAU,EAAE;AARP,KAD2B;;AAAA,SAanCC,cAbmC,GAajBC,IAAD,IAAS;AACvB,YAAMC,QAAQ,GAAE,KAAKL,KAAL,CAAWC,WAAX,CAAuBG,IAAvB,CAAhB;AACA,YAAME,YAAY,GAAGD,QAAQ,GAAG,CAAhC;;AACA,YAAME,kBAAkB,qBAChB,KAAKP,KAAL,CAAWC,WADK,CAAxB;;AAGCM,MAAAA,kBAAkB,CAACH,IAAD,CAAlB,GAA2BE,YAA3B;AACH,YAAME,aAAa,GAAGd,iBAAiB,CAACU,IAAD,CAAvC;AACA,YAAMK,QAAQ,GAAG,KAAKT,KAAL,CAAWE,UAA5B;AACA,YAAMQ,QAAQ,GAAGD,QAAQ,GAAGD,aAA5B;AAEA,WAAKG,QAAL,CAAc;AAACT,QAAAA,UAAU,EAACQ,QAAZ;AAAsBT,QAAAA,WAAW,EAACM;AAAlC,OAAd;AACA,KAzBkC;;AAAA,SA0BnCK,iBA1BmC,GA0BdR,IAAD,IAAS;AAC3B,YAAMC,QAAQ,GAAE,KAAKL,KAAL,CAAWC,WAAX,CAAuBG,IAAvB,CAAhB;AACA,YAAME,YAAY,GAAGD,QAAQ,GAAG,CAAhC;;AACA,YAAME,kBAAkB,qBAChB,KAAKP,KAAL,CAAWC,WADK,CAAxB;;AAGCM,MAAAA,kBAAkB,CAACH,IAAD,CAAlB,GAA2BE,YAA3B;AACH,YAAME,aAAa,GAAGd,iBAAiB,CAACU,IAAD,CAAvC;AACA,YAAMK,QAAQ,GAAG,KAAKT,KAAL,CAAWE,UAA5B;AACA,YAAMQ,QAAQ,GAAGD,QAAQ,GAAGD,aAA5B;AAEA,WAAKG,QAAL,CAAc;AAACT,QAAAA,UAAU,EAACQ,QAAZ;AAAsBT,QAAAA,WAAW,EAACM;AAAlC,OAAd;AAEC,KAvCkC;AAAA;;AA0CjCM,EAAAA,MAAM,GAAI;AACT,WACO,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,oBAAC,MAAD;AAAQ,MAAA,WAAW,EAAI,KAAKb,KAAL,CAAWC,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,EAGC,oBAAC,aAAD;AAAiB,MAAA,eAAe,EAAE,KAAKE,cAAvC;AACiB,MAAA,iBAAiB,MADlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHD,CADP;AAYF;;AAvDkC;;AA2DrC,eAAeJ,aAAf","sourcesContent":["import React , { Component } from 'react';\r\nimport Aux from '../../hoc/Aux';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls'\r\n\r\nconst INGREDIENT_PRICES ={\r\n  salad:0.5,\r\n  cheese:0.4,\r\n  meat:1.3,\r\n  bacon:0.7\r\n\r\n};\r\n\r\nclass BurgerBuilder extends Component{\r\n  state = {\r\n    ingredients : {\r\n      salad:0,\r\n      bacon:0,\r\n      cheese:0,\r\n      meat:0\r\n\r\n    },\r\n     totalprice: 4\r\n\r\n  }\r\n\r\n  addIngredients = (type) =>{\r\n     const oldcount= this.state.ingredients[type];\r\n     const updatedcount = oldcount + 1;\r\n     const updatedingredients = {\r\n          ...this.state.ingredients\r\n     }\r\n      updatedingredients[type] = updatedcount;\r\n   const priceaddition = INGREDIENT_PRICES[type];\r\n   const oldprice = this.state.totalprice;\r\n   const newprice = oldprice + priceaddition;\r\n\r\n   this.setState({totalprice:newprice, ingredients:updatedingredients})\r\n  }\r\n  removeIngredients = (type) =>{\r\n    const oldcount= this.state.ingredients[type];\r\n    const updatedcount = oldcount - 1;\r\n    const updatedingredients = {\r\n         ...this.state.ingredients\r\n    }\r\n     updatedingredients[type] = updatedcount;\r\n  const priceaddition = INGREDIENT_PRICES[type];\r\n  const oldprice = this.state.totalprice;\r\n  const newprice = oldprice - priceaddition;\r\n\r\n  this.setState({totalprice:newprice, ingredients:updatedingredients})\r\n\r\n  }\r\n\r\n\r\n    render () {\r\n     return(\r\n            <Aux>\r\n               <Burger ingredients = {this.state.ingredients}/>\r\n             \r\n             <BuildControls   ingredientadded={this.addIngredients}\r\n                              ingredientremoved \r\n             />\r\n            </Aux>\r\n\r\n    );\r\n\r\n\r\n  }\r\n}\r\n\r\n\r\nexport default BurgerBuilder;"]},"metadata":{},"sourceType":"module"}