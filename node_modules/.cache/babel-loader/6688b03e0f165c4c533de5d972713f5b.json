{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\aditya vinayak\\\\Desktop\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\aditya vinayak\\\\Desktop\\\\my-app\\\\src\\\\containers\\\\BurgerBuilder\\\\BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/modals/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders';\nimport Spinner from '../..//components/UI/spinner/spinner';\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalprice: 4,\n      purchasble: false,\n      purchasing: false,\n      loading: false\n    };\n\n    this.updatedpurchase = ingredients => {\n      const sum = Object.keys(ingredients).map(igkey => {\n        return ingredients[igkey];\n      }).reduce((sum, el) => {\n        return sum + el;\n      }, 0);\n      this.setState({\n        purchasble: sum > 0\n      });\n    };\n\n    this.addIngredients = type => {\n      const oldcount = this.state.ingredients[type];\n      const updatedcount = oldcount + 1;\n\n      const updatedingredients = _objectSpread({}, this.state.ingredients);\n\n      updatedingredients[type] = updatedcount;\n      const priceaddition = INGREDIENT_PRICES[type];\n      const oldprice = this.state.totalprice;\n      const newprice = oldprice + priceaddition;\n      this.setState({\n        totalprice: newprice,\n        ingredients: updatedingredients\n      });\n      this.updatedpurchase(updatedingredients);\n    };\n\n    this.removeIngredients = type => {\n      if (this.state.ingredients[type] <= 0) {\n        return;\n      }\n\n      const oldcount = this.state.ingredients[type];\n      const updatedcount = oldcount - 1;\n\n      const updatedingredients = _objectSpread({}, this.state.ingredients);\n\n      updatedingredients[type] = updatedcount;\n      const priceaddition = INGREDIENT_PRICES[type];\n      const oldprice = this.state.totalprice;\n      const newprice = oldprice - priceaddition;\n      this.setState({\n        totalprice: newprice,\n        ingredients: updatedingredients\n      });\n      this.updatedpurchase(updatedingredients);\n    };\n\n    this.purchasehandler = () => [this.setState({\n      purchasing: true\n    })];\n\n    this.purchasecancelled = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchasecontinued = () => {\n      // alert('you continue!');\n      const post = {\n        ingredients: this.state.ingredients,\n        price: this.state.totalprice,\n        customer: {\n          name: 'aditya vinayak',\n          email: 'adivinayak.av@gmail.com'\n        }\n      };\n      axios.post('/orders.json', post).then(response => console.log(response)).catch(error => console.log(error));\n    };\n  }\n\n  render() {\n    const disabledInfo = _objectSpread({}, this.state.ingredients);\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    let ordersummary = React.createElement(OrderSummary, {\n      ingredients: this.state.ingredients,\n      danger: this.purchasecancelled,\n      success: this.purchasecontinued,\n      price: this.state.totalprice,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    });\n\n    if (this.state.loading) {\n      ordersummary;\n    }\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: this.state.purchasing,\n      modalclosed: this.purchasecancelled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(Burger, {\n      ingredients: this.state.ingredients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), React.createElement(BuildControls, {\n      ingredientadded: this.addIngredients,\n      ingredientremoved: this.removeIngredients,\n      disabled: disabledInfo,\n      price: this.state.totalprice,\n      ordered: this.purchasehandler,\n      purchasble: this.state.purchasble,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["C:\\Users\\aditya vinayak\\Desktop\\my-app\\src\\containers\\BurgerBuilder\\BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","Modal","OrderSummary","axios","Spinner","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalprice","purchasble","purchasing","loading","updatedpurchase","sum","Object","keys","map","igkey","reduce","el","setState","addIngredients","type","oldcount","updatedcount","updatedingredients","priceaddition","oldprice","newprice","removeIngredients","purchasehandler","purchasecancelled","purchasecontinued","post","price","customer","name","email","then","response","console","log","catch","error","render","disabledInfo","key","ordersummary"],"mappings":"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","sourcesContent":["import React , { Component } from 'react';\r\nimport Aux from '../../hoc/Aux';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls'\r\nimport Modal from '../../components/UI/modals/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary'\r\nimport axios from'../../axios-orders';\r\nimport Spinner from '../..//components/UI/spinner/spinner';\r\n\r\nconst INGREDIENT_PRICES ={\r\n  salad:0.5,\r\n  cheese:0.4,\r\n  meat:1.3,\r\n  bacon:0.7\r\n\r\n};\r\n\r\nclass BurgerBuilder extends Component{\r\n  state = {\r\n    ingredients : {\r\n      salad:0,\r\n      bacon:0,\r\n      cheese:0,\r\n      meat:0\r\n\r\n    },\r\n     totalprice: 4,\r\n     purchasble:false,\r\n     purchasing:false,\r\n     loading:false\r\n\r\n  }\r\n\r\nupdatedpurchase = (ingredients) =>{\r\n\r\n const sum = Object.keys(ingredients)\r\n .map(igkey => {\r\n     return ingredients[igkey]\r\n })\r\n .reduce((sum,el)=>{\r\n    return sum+el;\r\n },0)\r\n this.setState({purchasble:sum > 0})\r\n}\r\n\r\n  addIngredients = (type) =>{\r\n     const oldcount= this.state.ingredients[type];\r\n     const updatedcount = oldcount + 1;\r\n     const updatedingredients = {\r\n          ...this.state.ingredients\r\n     }\r\n      updatedingredients[type] = updatedcount;\r\n   const priceaddition = INGREDIENT_PRICES[type];\r\n   const oldprice = this.state.totalprice;\r\n   const newprice = oldprice + priceaddition;\r\n   \r\n   this.setState({totalprice:newprice, ingredients:updatedingredients})\r\n   this.updatedpurchase(updatedingredients);\r\n  }\r\n  removeIngredients = (type) =>{\r\n    if(this.state.ingredients[type] <= 0){\r\n           return;\r\n    }\r\n    const oldcount= this.state.ingredients[type];\r\n    const updatedcount = oldcount - 1;\r\n    const updatedingredients = {\r\n         ...this.state.ingredients\r\n    }\r\n     updatedingredients[type] = updatedcount;\r\n  const priceaddition = INGREDIENT_PRICES[type];\r\n  const oldprice = this.state.totalprice;\r\n  const newprice = oldprice - priceaddition;\r\n\r\n  this.setState({totalprice:newprice, ingredients:updatedingredients})\r\n  this.updatedpurchase(updatedingredients);\r\n  }\r\n\r\n  purchasehandler = () =>[\r\n    this.setState({purchasing :true})\r\n\r\n  ]\r\n\r\n  purchasecancelled =()=>{\r\n    this.setState({purchasing:false})\r\n  }\r\n\r\n  purchasecontinued = ()=>{\r\n   // alert('you continue!');\r\n\r\n  const post={\r\n    \r\n    ingredients:this.state.ingredients,\r\n    price:this.state.totalprice,\r\n    customer:{\r\n      name:'aditya vinayak',\r\n      email:'adivinayak.av@gmail.com'\r\n\r\n    }\r\n\r\n\r\n      \r\n    \r\n   }\r\n   axios.post('/orders.json',post)\r\n   .then(response=> console.log(response))\r\n   .catch(error => console.log(error));\r\n\r\n  }\r\n\r\n    render () {\r\n\r\n\r\n\r\n  const  disabledInfo = {\r\n     \r\n       ...this.state.ingredients\r\n    };\r\n   for(let key in disabledInfo){\r\n    disabledInfo[key] =  disabledInfo[key] <= 0\r\n   }\r\n\r\nlet ordersummary = <OrderSummary ingredients={this.state.ingredients}\r\ndanger={this.purchasecancelled}\r\nsuccess={this.purchasecontinued}\r\nprice={this.state.totalprice}\r\n\r\n/>\r\n\r\n\r\n\r\n   if(this.state.loading){\r\nordersummary\r\n  \r\n  }   \r\n\r\n     return(\r\n            <Aux>\r\n           \r\n\r\n             <Modal show={this.state.purchasing}\r\n                    modalclosed={this.purchasecancelled}\r\n           >\r\n \r\n\r\n              \r\n             </Modal>\r\n               <Burger ingredients = {this.state.ingredients}/>\r\n             \r\n             <BuildControls   ingredientadded={this.addIngredients}\r\n                              ingredientremoved = {this.removeIngredients}\r\n                              disabled = {disabledInfo}\r\n                              price={this.state.totalprice}\r\n                              ordered = {this.purchasehandler}\r\n                              purchasble={this.state.purchasble}\r\n                                \r\n             />\r\n            </Aux>\r\n\r\n    );\r\n\r\n\r\n  }\r\n}\r\n\r\n\r\nexport default BurgerBuilder;"]},"metadata":{},"sourceType":"module"}