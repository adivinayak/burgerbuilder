{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\aditya vinayak\\\\Desktop\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\aditya vinayak\\\\Desktop\\\\my-app\\\\src\\\\containers\\\\BurgerBuilder\\\\BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/modals/modal';\nimport OrderSummary from '..';\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalprice: 4,\n      purchasble: false\n    };\n\n    this.updatedpurchase = ingredients => {\n      const sum = Object.keys(ingredients).map(igkey => {\n        return ingredients[igkey];\n      }).reduce((sum, el) => {\n        return sum + el;\n      }, 0);\n      this.setState({\n        purchasble: sum > 0\n      });\n    };\n\n    this.addIngredients = type => {\n      const oldcount = this.state.ingredients[type];\n      const updatedcount = oldcount + 1;\n\n      const updatedingredients = _objectSpread({}, this.state.ingredients);\n\n      updatedingredients[type] = updatedcount;\n      const priceaddition = INGREDIENT_PRICES[type];\n      const oldprice = this.state.totalprice;\n      const newprice = oldprice + priceaddition;\n      this.setState({\n        totalprice: newprice,\n        ingredients: updatedingredients\n      });\n      this.updatedpurchase(updatedingredients);\n    };\n\n    this.removeIngredients = type => {\n      if (this.state.ingredients[type] <= 0) {\n        return;\n      }\n\n      const oldcount = this.state.ingredients[type];\n      const updatedcount = oldcount - 1;\n\n      const updatedingredients = _objectSpread({}, this.state.ingredients);\n\n      updatedingredients[type] = updatedcount;\n      const priceaddition = INGREDIENT_PRICES[type];\n      const oldprice = this.state.totalprice;\n      const newprice = oldprice - priceaddition;\n      this.setState({\n        totalprice: newprice,\n        ingredients: updatedingredients\n      });\n      this.updatedpurchase(updatedingredients);\n    };\n  }\n\n  render() {\n    const disabledInfo = _objectSpread({}, this.state.ingredients);\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(Burger, {\n      ingredients: this.state.ingredients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(BuildControls, {\n      ingredientadded: this.addIngredients,\n      ingredientremoved: this.removeIngredients,\n      disabled: disabledInfo,\n      price: this.state.totalprice,\n      purchasble: this.state.purchasble,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["C:\\Users\\aditya vinayak\\Desktop\\my-app\\src\\containers\\BurgerBuilder\\BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","Modal","OrderSummary","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalprice","purchasble","updatedpurchase","sum","Object","keys","map","igkey","reduce","el","setState","addIngredients","type","oldcount","updatedcount","updatedingredients","priceaddition","oldprice","newprice","removeIngredients","render","disabledInfo","key"],"mappings":"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","sourcesContent":["import React , { Component } from 'react';\r\nimport Aux from '../../hoc/Aux';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls'\r\nimport Modal from '../../components/UI/modals/modal';\r\nimport OrderSummary from '..'\r\nconst INGREDIENT_PRICES ={\r\n  salad:0.5,\r\n  cheese:0.4,\r\n  meat:1.3,\r\n  bacon:0.7\r\n\r\n};\r\n\r\nclass BurgerBuilder extends Component{\r\n  state = {\r\n    ingredients : {\r\n      salad:0,\r\n      bacon:0,\r\n      cheese:0,\r\n      meat:0\r\n\r\n    },\r\n     totalprice: 4,\r\n     purchasble:false\r\n     \r\n\r\n  }\r\n\r\nupdatedpurchase = (ingredients) =>{\r\n\r\n const sum = Object.keys(ingredients)\r\n .map(igkey => {\r\n     return ingredients[igkey]\r\n })\r\n .reduce((sum,el)=>{\r\n    return sum+el;\r\n },0)\r\n this.setState({purchasble:sum > 0})\r\n}\r\n\r\n  addIngredients = (type) =>{\r\n     const oldcount= this.state.ingredients[type];\r\n     const updatedcount = oldcount + 1;\r\n     const updatedingredients = {\r\n          ...this.state.ingredients\r\n     }\r\n      updatedingredients[type] = updatedcount;\r\n   const priceaddition = INGREDIENT_PRICES[type];\r\n   const oldprice = this.state.totalprice;\r\n   const newprice = oldprice + priceaddition;\r\n   \r\n   this.setState({totalprice:newprice, ingredients:updatedingredients})\r\n   this.updatedpurchase(updatedingredients);\r\n  }\r\n  removeIngredients = (type) =>{\r\n    if(this.state.ingredients[type] <= 0){\r\n           return;\r\n    }\r\n    const oldcount= this.state.ingredients[type];\r\n    const updatedcount = oldcount - 1;\r\n    const updatedingredients = {\r\n         ...this.state.ingredients\r\n    }\r\n     updatedingredients[type] = updatedcount;\r\n  const priceaddition = INGREDIENT_PRICES[type];\r\n  const oldprice = this.state.totalprice;\r\n  const newprice = oldprice - priceaddition;\r\n\r\n  this.setState({totalprice:newprice, ingredients:updatedingredients})\r\n  this.updatedpurchase(updatedingredients);\r\n  }\r\n\r\n\r\n    render () {\r\n\r\n  const  disabledInfo = {\r\n     \r\n       ...this.state.ingredients\r\n    };\r\n   for(let key in disabledInfo){\r\n    disabledInfo[key] =  disabledInfo[key] <= 0\r\n   }\r\n\r\n     return(\r\n            <Aux>\r\n           \r\n\r\n             <Modal/>\r\n               <Burger ingredients = {this.state.ingredients}/>\r\n             \r\n             <BuildControls   ingredientadded={this.addIngredients}\r\n                              ingredientremoved = {this.removeIngredients}\r\n                              disabled = {disabledInfo}\r\n                              price={this.state.totalprice}\r\n                              \r\n                              purchasble={this.state.purchasble}\r\n\r\n             />\r\n            </Aux>\r\n\r\n    );\r\n\r\n\r\n  }\r\n}\r\n\r\n\r\nexport default BurgerBuilder;"]},"metadata":{},"sourceType":"module"}